cdrom
lang en_US.UTF-8
keyboard us
network --bootproto=dhcp --hostname=fedora35arm
timezone Europe/Moscow
rootpw --plaintext packer
user --name=vagrant --password=vagrant
#auth --enableshadow --passalgo=sha512 --kickstart
firewall --disabled
selinux --permissive
bootloader --location=mbr
 
text
skipx
zerombr

ignoredisk --only-use=nvme0n1
autopart

clearpart --all --initlabel
 
firstboot --disable
reboot
 
 
%post --log=/root/kickstart-post.log
echo "vagrant ALL = (ALL)  NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers

mkdir /home/vagrant/.ssh
chmod 0700 /home/vagrant/.ssh
cd /home/vagrant/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC6mbX4ly5Qdac4Sg13uRYzb6VnUz2uOrmjOgoHeUYL4WxKOqjM5vO6E8JTLxuvdw7sdl+DyOjSfoCvipCui628dwZjL5dJXAGzg6KhNU3VHW75EDK2rRSU2E9auXUZEHZtODu9FO7HBxWkiLZcrslbYiH40PaPXEmjS3cBnxCDajfAqZ+kbjbxYqvmeepRowibseOFwG3tVDBOl5zOR1TZ/hb55x6aqi4cz5CbNnPFYBSQFtsZEuyh4QsMlJG3nmTYpSgHAKuuCyfmgmCSDQW4K/NqbtOxuwgUilZ0K9zJRzzt+Ve96irBwChqXvG4b1/+ddIM6QZLAHcj0vGASVkbAAB+7joo/xZfQ+pvCGpN+xnlUcQKf9fAYHvpYVgWhXPtDo10UzUGWDeRjNbrMSqKJrk6RRAYyVroWAi5/MklZdbf9IgHFX8xhTzgUl9/3UCP8x8P8nJhG1GbMJ9UT3vGshuXKvrn3FvHXKWTuA9I31KdSYEEVWH5GJ5J5T8AAWk= antonrazvodov@genanasosov-mac.local" > authorized_keys
chmod 0600 authorized_keys
chown vagrant:vagrant authorized_keys
cd /home/vagrant
chown vagrant:vagrant /home/vagrant/.ssh

chown root:root /etc/ssh/${SSHD_CONFIG}
chmod 0600 /etc/ssh/${SSHD_CONFIG}

#yum -y update
#yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum -y install cockpit net-tools
systemctl enable --now cockpit.socket
#cat <<EOF > /etc/yum.repos.d/kubernetes.repo
#[kubernetes]
#name=Kubernetes
#baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
#enabled=1
#gpgcheck=1
#repo_gpgcheck=1
#gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
#        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
#EOF
#yum install -y kubelet kubeadm kubectl
#
#systemctl start docker && systemctl enable docker
#systemctl start kubelet && systemctl enable kubelet
#
#sysctl -w net.bridge.bridge-nf-call-iptables=1
#echo 'net.bridge.bridge-nf-call-iptables=1' > /etc/sysctl.d/k8s.conf
#swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab
%end

%packages --ignoremissing
@^server-product-environment
@CORE
epel-release


%end